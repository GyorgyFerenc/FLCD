link: https://github.com/GyorgyFerenc/FLCD

The Symbol table consists of two hash tables, one for identifiers and one for constants.

Hash_Table:
    - It is a dynamicly growing hash table for hashing strings.
    - After each growth the previous indexes for the inserted strings remain VALID.

    Functions:
        static Hash_Table create(usize capacity) 
            - It creates a hash table with the specified initial capacity.

        void destroy()
            - It destroys the hash table.

        usize add(std::string str)
            - It adds the string into the hash table.
            It uses == operator to check if the same string is already added.
            It holds them uniquely there will be no duplicates
            It returns the index where the string is put, for a fast retrieval.
            Growths the table if needed.
            Growing does NOT invalided the indexes previously returned.

        std::string get(usize index)
            - It returns the string contained at the index.
            The index is remain VALID even if the table growths.
Scanner:

    Fields:
        std::string source
            - The source of where tokens will be scanned from.
        PIF pif
            - The tokens that are scanned from source.
        Symbol_Table table
            - The symbol table that will be filled up.

    Functions:
        static Scanner create(std::string source)
            - It creates a scanner over the source provided.

        void all()
            - It scans the tokens from source and puts it into the field pif.
              It fills up the the symbol table as well.
    RegExes:
        integer: "0|[+-]?[1-9][0-9]*"
            - It matches sequence one or sequence two. The first is the character 0.
            The second starts with + or - optionally than a digit except 0 and after that a digit any number of times.
        identifer: "[A-Za-z_][A-Za-z_0-9]*"
            - It matches any captial or small letter or underscore.
            After that it mathces any number of captial or small letter or underscore or digits.

PIF:
    is std::vector<Token>.

Token:
    Fields:
        Kind kind
            - The kind of the token.
        std::string str;
            - The str representation of the token.
    
        union 
            identifier
                - If the kind is Identifier then the token has this field.
            constant
                - If the kind is Constant then the token has this field.

Symbol_Table:
    Hash_Table identifiers;
        - The identifiers scanned.
    Hash_Table constants;
        - The constants scanned.





