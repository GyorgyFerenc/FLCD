program = statement {statement}.
statement = variable_declaration |
	 block |
	 if |
	 for |
	 read |
	 print |
	 expression_statement.
variable_declaration = "let" identifier (type |
	 [type] "=" expression ) ";".
type = "i32" |
	 "bool" |
	 array_type.
array_type = "[]" type.
if = "if" expression block.
block = brace_block |
	 do_block.
do_block = "do" statement.
brace_block = "{" {statement} "}".
for = normal_for |
	 for_in.
for_in = "for" identifier "in" identifier block.
normal_for = "for" expression block.
print = "print" "(" variable_expression ")" ";".
read = "read" "(" reference_expression ")" ";".
expression_statment = expression ";".
expression = prefix_expression |
	 variable_expression |
	 constant_expression |
	 infix_expression |
	 group_expression |
	 array_expression.
prefix_expression     = prefix_operator expression.
variable_expression   = identifier.
constant_expression   = integer_constant |
	 bool_constant.
infix_experssion      = expression infix_operator experssion .
group_expression      = "(" expression ")".
array_expression      = array_type "{" [ expression { "," expression } ] "}".
